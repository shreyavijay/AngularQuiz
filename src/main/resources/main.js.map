{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accordion.service.ts","webpack:///./src/app/action.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/assessment/assessment.component.css","webpack:///./src/app/assessment/assessment.component.html","webpack:///./src/app/assessment/assessment.component.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/candidate-directory/candidate-directory.component.css","webpack:///./src/app/candidate-directory/candidate-directory.component.html","webpack:///./src/app/candidate-directory/candidate-directory.component.ts","webpack:///./src/app/candidate.service.ts","webpack:///./src/app/create-test/create-test.component.css","webpack:///./src/app/create-test/create-test.component.html","webpack:///./src/app/create-test/create-test.component.ts","webpack:///./src/app/delete-question/delete-question.component.css","webpack:///./src/app/delete-question/delete-question.component.html","webpack:///./src/app/delete-question/delete-question.component.ts","webpack:///./src/app/developer-disclosure/developer-disclosure.component.css","webpack:///./src/app/developer-disclosure/developer-disclosure.component.html","webpack:///./src/app/developer-disclosure/developer-disclosure.component.ts","webpack:///./src/app/developer-sign-in/developer-sign-in.component.css","webpack:///./src/app/developer-sign-in/developer-sign-in.component.html","webpack:///./src/app/developer-sign-in/developer-sign-in.component.ts","webpack:///./src/app/developer.ts","webpack:///./src/app/email-validator.service.ts","webpack:///./src/app/exit-test/exit-test.component.css","webpack:///./src/app/exit-test/exit-test.component.html","webpack:///./src/app/exit-test/exit-test.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/manage-questions/manage-questions.component.css","webpack:///./src/app/manage-questions/manage-questions.component.html","webpack:///./src/app/manage-questions/manage-questions.component.ts","webpack:///./src/app/menubar.service.ts","webpack:///./src/app/modify-candidate/modify-candidate.component.css","webpack:///./src/app/modify-candidate/modify-candidate.component.html","webpack:///./src/app/modify-candidate/modify-candidate.component.ts","webpack:///./src/app/modify-question/modify-question.component.css","webpack:///./src/app/modify-question/modify-question.component.html","webpack:///./src/app/modify-question/modify-question.component.ts","webpack:///./src/app/phone-number.directive.ts","webpack:///./src/app/phone-validator.directive.ts","webpack:///./src/app/question-assessment/question-assessment.component.css","webpack:///./src/app/question-assessment/question-assessment.component.html","webpack:///./src/app/question-assessment/question-assessment.component.ts","webpack:///./src/app/questions.service.ts","webpack:///./src/app/questions.ts","webpack:///./src/app/scrollbar.service.ts","webpack:///./src/app/sign-in/sign-in.component.css","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/test.service.ts","webpack:///./src/app/test.ts","webpack:///./src/app/user-registration/user-registration.component.css","webpack:///./src/app/user-registration/user-registration.component.html","webpack:///./src/app/user-registration/user-registration.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/user.ts","webpack:///./src/app/validate-email.directive.ts","webpack:///./src/app/vertical-navbar/vertical-navbar.component.css","webpack:///./src/app/vertical-navbar/vertical-navbar.component.html","webpack:///./src/app/vertical-navbar/vertical-navbar.component.ts","webpack:///./src/app/view-test/view-test.component.css","webpack:///./src/app/view-test/view-test.component.html","webpack:///./src/app/view-test/view-test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\ndeclare var $: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccordionService {\r\n\r\n  constructor() { \r\n\r\n  }\r\n\r\n  public initializeAccordion(): void {\r\n    $(document).ready(function () {\r\n      // jQuery methods go here...\r\n      console.log('IExecuted document.ready');\r\n      //Initialize docucment.ready\r\n      $(this).removeClass(\"active\");\r\n    //   $(\"button.accordion + div.accordion-container\").css(\"display\",\"block\");\r\n      $(\"button.accordion\").unbind().click(function () {\r\n        $(this).toggleClass(\"active\");\r\n          console.log('Display accordion ',$(this).css(\"display\"));\r\n          console.log('Display accordion ',$(this));\r\n          $(this).next().toggle().css(\"display\");\r\n          \r\n                //   if($(this).css(\"display\") === \"block\"){\r\n                //       console.log($(this).next());\r\n                //       $(\"this\").next().toggle();\r\n                //   } else {\r\n                //       $(this).next().toggle().css(\"display\")\r\n                      \r\n                //   }\r\n              \r\n      });\r\n  }); \r\n  }\r\n\r\n}\r\n","import { Developer } from \"./developer\";\r\n\r\nexport class Action {\r\n    action: string;\r\n    testName: string;\r\n    questionId: string;\r\n    developerEmail: string;\r\n\r\n    \r\n    // mobile: string;\r\n    // password: string;\r\n    // confirmPassword: string;\r\n    // companyname: string;\r\n    // websiteurl: string;\r\n    // industry: string;\r\n    // country: string;\r\n    // companyaddress: string;\r\n    // city: string;\r\n    // postalcode: string;\r\n    // nameoncard: string;\r\n    // cardnumber: string;\r\n    // cardmonthofexpiry: string;\r\n    // cardyearofexpiry: string;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule,Routes } from '@angular/router';\r\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ViewTestComponent } from './view-test/view-test.component';\r\nimport { ManageQuestionsComponent } from './manage-questions/manage-questions.component';\r\nimport { CandidateDirectoryComponent } from './candidate-directory/candidate-directory.component';\r\nimport { DeveloperDisclosureComponent } from './developer-disclosure/developer-disclosure.component';\r\nimport { AssessmentComponent } from './assessment/assessment.component';\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'register/:userId', component: UserRegistrationComponent },\r\n  { path: 'viewtests', component: ViewTestComponent},\r\n  { path: 'managequestions', component: ManageQuestionsComponent},\r\n  { path: 'candidatedirectory', component: CandidateDirectoryComponent},\r\n  { path: 'devdisclosure', component: DeveloperDisclosureComponent},\r\n  { path: 'assessment', component: AssessmentComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule]\r\n})\r\n\r\n\r\nexport class AppRoutingModule { \r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"skin\\\">\\r\\n\\r\\n    <app-header (toggleNavPanel)=\\\"toggleDisplayOfNavPanel($event)\\\"></app-header>\\r\\n    <!-- app-vertical-navbar     -->\\r\\n    <app-vertical-navbar></app-vertical-navbar>\\r\\n    <router-outlet></router-outlet>\\r\\n    <!-- <app-home></app-home>     -->\\r\\n    \\r\\n    <app-footer></app-footer>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <script src=\\\"accordion.js\\\"></script>\\r\\n<script src=\\\"modal.js\\\"></script> -->\"","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { VerticalNavbarComponent } from './vertical-navbar/vertical-navbar.component';\r\nimport { HeaderComponent } from './header/header.component';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  // encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  signUp: Boolean;\r\n  signIn: Boolean;\r\n  @ViewChild(VerticalNavbarComponent)\r\n  private verticaNavbarComponent: VerticalNavbarComponent;\r\n\r\n  @ViewChild(HeaderComponent)\r\n  private headerComponent: HeaderComponent;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    const appComponent = this;\r\n    $(document).ready(function () {\r\n      let width:number = $(window).width();\r\n      let menubarDisplayFlag = width <= 768 ? true: false;\r\n      appComponent.setMenuBarFlag(menubarDisplayFlag);\r\n      $(window).resize(function(){\r\n        let txt = \"\";\r\n        txt += \"Document width/height: \" + $(document).width();\r\n        txt += \"x\" + $(document).height() + \"\\n\";\r\n        txt += \"Window width/height: \" + $(window).width();\r\n        txt += \"x\" + $(window).height();\r\n        console.log(txt);\r\n        width = $(window).width() + 17;\r\n        let menubarDisplayFlag = width <= 768 ? true: false;\r\n        appComponent.setMenuBarFlag(menubarDisplayFlag);\r\n      });\r\n\r\n    });\r\n\r\n  }  \r\n\r\n  setMenuBarFlag(flag: boolean): void {\r\n    this.headerComponent.setMenubarBtnFlag(flag)\r\n  }  \r\n\r\n  toggleDisplayOfNavPanel(flag: boolean): void {\r\n    this.verticaNavbarComponent.toggleDisplayOfNavPanel(flag);\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { Injectable, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { VerticalNavbarComponent } from './vertical-navbar/vertical-navbar.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { PhoneValidatorDirective } from './phone-validator.directive';\r\nimport { PhoneNumberDirective } from './phone-number.directive';\r\nimport { ValidateEmailDirective } from './validate-email.directive';\r\nimport { EmailValidatorService } from './email-validator.service';\r\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ViewTestComponent } from './view-test/view-test.component';\r\nimport { ManageQuestionsComponent } from './manage-questions/manage-questions.component';\r\nimport { CreateTestComponent } from './create-test/create-test.component';\r\nimport { DeleteQuestionComponent } from './delete-question/delete-question.component';\r\nimport { ModifyQuestionComponent } from './modify-question/modify-question.component';\r\nimport { CandidateDirectoryComponent } from './candidate-directory/candidate-directory.component';\r\nimport { ModifyCandidateComponent } from './modify-candidate/modify-candidate.component';\r\nimport { DeveloperSignInComponent } from './developer-sign-in/developer-sign-in.component';\r\nimport { DeveloperDisclosureComponent } from './developer-disclosure/developer-disclosure.component';\r\nimport { AssessmentComponent } from './assessment/assessment.component';\r\nimport { QuestionAssessmentComponent } from './question-assessment/question-assessment.component';\r\nimport { ExitTestComponent } from './exit-test/exit-test.component';\r\nimport { HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class XhrInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const xhr = req.clone({\r\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\r\n    });\r\n    console.log('intercept headers');\r\n    return next.handle(xhr);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    VerticalNavbarComponent,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    PhoneValidatorDirective,\r\n    PhoneNumberDirective,\r\n    ValidateEmailDirective,\r\n    UserRegistrationComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    ViewTestComponent,\r\n    ManageQuestionsComponent,\r\n    CreateTestComponent,\r\n    DeleteQuestionComponent,\r\n    ModifyQuestionComponent,\r\n    CandidateDirectoryComponent,\r\n    ModifyCandidateComponent,\r\n    DeveloperSignInComponent,\r\n    DeveloperDisclosureComponent,\r\n    AssessmentComponent,\r\n    QuestionAssessmentComponent,\r\n    ExitTestComponent\r\n ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule\r\n  ],\r\n\r\n  providers: [AuthService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-container-wrapper\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n    <!-- <div id=\\\"section_form1\\\" class=\\\"section\\\"> -->\\r\\n    <app-question-assessment #questionComponent *ngIf=\\\"displayQuestion\\\" [question]=\\\"question\\\" (moveToNextQuestion)=\\\"next($event)\\\"></app-question-assessment>\\r\\n    <app-exit-test *ngIf=\\\"exitTest\\\"></app-exit-test>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { TestService } from '../test.service';\r\nimport { QuestionsService } from '../questions.service';\r\nimport { LoginService } from '../login.service';\r\nimport { Developer } from '../developer';\r\nimport { Question } from '../questions';\r\nimport { CandidateService } from '../candidate.service';\r\nimport { QuestionAssessmentComponent } from '../question-assessment/question-assessment.component';\r\n\r\n@Component({\r\n  selector: 'app-assessment',\r\n  templateUrl: './assessment.component.html',\r\n  styleUrls: ['./assessment.component.css']\r\n})\r\nexport class AssessmentComponent implements OnInit {\r\n  questions: Question[];\r\n  question: Question;\r\n  index: number = 0;\r\n\r\n  @ViewChild(QuestionAssessmentComponent)\r\n  private questionComponent: QuestionAssessmentComponent;  \r\n  displayQuestion: Boolean = true;\r\n  exitTest: Boolean = false;\r\n  constructor(private loginSrvc: LoginService,\r\n              private questionSrvc: QuestionsService,\r\n              private candidateSrvc: CandidateService) { }\r\n\r\n  ngOnInit() {\r\n    let developer: Developer = this.loginSrvc.getUserSignedIn();\r\n    this.questions = this.questionSrvc.getQuestions(developer.testName);\r\n    this.next(true);\r\n  }\r\n\r\n\r\n  next(moveNext:Boolean) {\r\n    if(!moveNext) {\r\n      return;\r\n    }\r\n    if(this.index < this.questions.length) {\r\n      // this.question = (this.index + 1) < this.questions.length ? this.questions[] :]  \r\n      this.question = this.questions[this.index] ;\r\n      if(this.index > 0) {\r\n        this.questionComponent.populateChoice(this.question);\r\n      }\r\n      // this.displayQuestion = !this.displayQuestion; \r\n      // this.displayQuestion = !this.displayQuestion;\r\n    } else {\r\n      this.displayQuestion = !this.displayQuestion;\r\n      this.exitTest = true;\r\n      this.candidateSrvc.evaluateAssessement(this.loginSrvc.getUserSignedIn());\r\n    }\r\n    this.index++;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  credentials = {username: '', password: ''};    \n  authenticated = false;\n  greeting: any;\n  constructor(private http: HttpClient) {\n    http.get('token').subscribe(data => {\n      const token = data['token'];\n      http.get('http://localhost:8080', {headers : new HttpHeaders().set('X-Auth-Token', token)})\n        .subscribe(response => this.greeting = response);\n    }, () => {});\n  }\n\n  authenticate(credentials, callback) {\n\n    const headers = new HttpHeaders(credentials ? {\n        authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n    } : {});\n\n    this.http.get('user', {headers: headers}).subscribe(response => {\n        if (response['name']) {\n            this.authenticated = true;\n        } else {\n            this.authenticated = false;\n        }\n        return callback && callback();\n    });\n\n}  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-container-wrapper\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n      <div id=\\\"section_form1\\\" class=\\\"section\\\">\\r\\n          <h2 class=\\\"section-heading\\\"> Candidate Directory</h2>\\r\\n          <div id=\\\"section1\\\" class=\\\"section \\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"firstName\\\">First Name</label>\\r\\n                      <input type=\\\"text\\\" id=\\\"cdFirstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"lastName\\\">Last Name</label>\\r\\n                      <input type=\\\"text\\\" id=\\\"cdLastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\">\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"email\\\">Email</label>\\r\\n                      <input type=\\\"text\\\" id=\\\"cdEmail\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\">\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"button-group-center\\\">\\r\\n                      <button class=\\\"button save-button search-button\\\" onclick=\\\"window.open('Registration.html')\\\">Search</button>\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"section\\\">\\r\\n              <div>\\r\\n                  <button class=\\\"button create\\\" (click)=\\\"addEditCandidate()\\\">Add New Candidate</button>                            \\r\\n                  <app-modify-candidate *ngIf=\\\"addNewCandidate\\\" [action]=\\\"action\\\" (closeModifyQuestionModal)=\\\"oncloseModal($event)\\\"></app-modify-candidate>\\r\\n              </div>\\r\\n              <div style=\\\"overflow-x:auto;white-space: nowrap\\\">\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Email</th>\\r\\n                        <th>Test</th>\\r\\n                        <th>Edit</th>\\r\\n                        <th style=\\\"margin-right: 10px;\\\">Delete</th>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let dev of developers;let i=index\\\">\\r\\n                        <td class=\\\"format\\\">{{dev.firstName}} {{dev.lastName}}</td>\\r\\n                        <td class=\\\"format\\\">{{dev.email}}</td>\\r\\n                        <td class=\\\"format\\\">{{dev.testName}}</td>\\r\\n                        <td>\\r\\n                            <div class=\\\"tooltip\\\">\\r\\n                                <i class=\\\"fa fa-edit fa-lg\\\" (click)=\\\"addEditCandidate(dev)\\\" style=\\\"color:green;\\\"></i>\\r\\n                                <span class=\\\"tooltiptext\\\">Edit</span>\\r\\n                            </div>\\r\\n                                <app-modify-candidate *ngIf=\\\"modifyCandidate\\\" [action]=\\\"action\\\" (closeModifyQuestionModal)=\\\"oncloseModal($event)\\\"></app-modify-candidate>  \\r\\n                        </td>\\r\\n                        <td style=\\\"margin-right: 10px;\\\">\\r\\n                                <div class=\\\"tooltip\\\">\\r\\n                                    <i class=\\\"fa fa-trash fa-lg\\\" style=\\\"color:green;\\\"></i>\\r\\n                                    <span class=\\\"tooltiptext\\\">Delete</span>\\r\\n                                </div>\\r\\n                        </td>    \\r\\n\\r\\n                    </tr>\\r\\n            \\r\\n\\r\\n                </table>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Developer } from '../developer';\r\nimport { Candidate } from '../candidate';\r\nimport { Action } from '../action';\r\nimport { CandidateService } from '../candidate.service';\r\nimport { AccordionService } from '../accordion.service';\r\n\r\n@Component({\r\n  selector: 'app-candidate-directory',\r\n  templateUrl: './candidate-directory.component.html',\r\n  styleUrls: ['./candidate-directory.component.css']\r\n})\r\nexport class CandidateDirectoryComponent implements OnInit {\r\n  addNewCandidate: Boolean;\r\n  modifyCandidate: Boolean;\r\n  action: Action;\r\n  developers: Developer[] = [];\r\n  constructor(private candidateSrvc: CandidateService\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.action = new Action();\r\n\r\n  }\r\n\r\n  addEditCandidate(developer: any) : void {\r\n    if(developer) {\r\n      this.modifyCandidate = true;\r\n      this.action.developerEmail = developer.email;\r\n    } else {\r\n      this.addNewCandidate = true;\r\n    }\r\n  }\r\n\r\n  populateCandidateList() {\r\n    this.developers = this.candidateSrvc.getAllDevelopers();\r\n  }\r\n\r\n  getCandidate(name: string): Developer {\r\n    return (this.developers.length > 0 && name) ? \r\n      this.developers.filter(dev => (dev.firstName.trim() + dev.lastName.trim()) == name.trim())[0] : null ;\r\n  }\r\n\r\n  getNewCandidate(): Developer {\r\n    return new Developer();\r\n  }\r\n\r\n  oncloseModal(close: boolean) {\r\n    this.addNewCandidate = !close;\r\n    this.modifyCandidate = !close;\r\n    this.action.developerEmail = null;\r\n    this.populateCandidateList();\r\n    // this.loadQuestions();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Developer, DeveloperResponse } from './developer';\r\nimport { TestService } from './test.service';\r\nimport { QuestionsService } from './questions.service';\r\nimport { Question } from './questions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CandidateService {\r\n  private developers: Developer[]=[];\r\n  constructor(private testSrvc: TestService,\r\n              private questionSrvc: QuestionsService) { }\r\n\r\n  //PErforms ADD/EDIT operation\r\n  addCandidate(developer: Developer) : void {\r\n    //Add Scenario\r\n    if(!this.developerExists(developer)) {\r\n      this.developers.push(developer);\r\n    } else {\r\n      //Edit Scenario\r\n      let slctdDeveloper:Developer = (developer.email) ?\r\n        this.developers.filter(dev => dev.email == developer.email) [0] : null;\r\n       slctdDeveloper.firstName =  developer.firstName;\r\n       slctdDeveloper.lastName = developer.lastName;\r\n       slctdDeveloper.mobile = developer.mobile;\r\n       slctdDeveloper.testName = developer.testName; \r\n    }\r\n    \r\n    this.testSrvc.addDeveloperToTest(developer);\r\n  }\r\n\r\n  getCandidate(email: string): Developer {\r\n    let candidate:Developer[] =  this.developers.filter(dev => dev.email == email);\r\n    return candidate.length > 0 ? candidate[0] : null;\r\n  }\r\n\r\n  developerExists(developer: Developer): Boolean {\r\n    // let exists = this.developers.findIndex(dev => dev.firstName == developer.firstName \r\n    //                               && dev.lastName == developer.lastName);\r\n    let exists = this.developers.findIndex(dev => dev.email == developer.email);\r\n  \r\n    if(exists == -1) {\r\n      return false;\r\n    }\r\n    return true;                                  \r\n  }\r\n  \r\n  getAllDevelopers(): Developer[] {\r\n    return this.developers;\r\n  } \r\n\r\n  authenticateCandidate(username: string, passwd: string): Boolean {\r\n    //Username of the Candidate is nothing but email & passwd is nothing but mobile number\r\n    let developer:Developer = this.getCandidate(username);\r\n    return developer && developer.mobile == passwd;\r\n  }\r\n\r\n  captureResponse(devResponse: DeveloperResponse, \r\n                  candidate: Developer) {\r\n    let developer:Developer = candidate && candidate.email ? this.getCandidate(candidate.email) : null;\r\n    let add = developer \r\n                && devResponse \r\n                && devResponse.questionId\r\n                && devResponse.answer\r\n                && candidate.testName == developer.testName\r\n                && developer\r\n                && developer.developerResponse\r\n                && developer.developerResponse.findIndex(dev => dev.questionId == devResponse.questionId) ==  -1;                    \r\n    if(add) {\r\n      //Filter -1\r\n      devResponse.answer = devResponse.answer.filter(ans => ans != -1);\r\n      developer.developerResponse.push(devResponse);\r\n    } \r\n  }\r\n\r\n  evaluateAssessement(candidate: Developer): number {\r\n    let developer: Developer = candidate && candidate.email ? this.getCandidate(candidate.email) : null;\r\n    let questions: Question[] = developer.testName ? this.questionSrvc.getQuestions(developer.testName) : null;\r\n    let proceedWithEvaluation = (developer && developer.developerResponse && developer.developerResponse.length > 0)\r\n                                  && (questions && questions.length > 0);\r\n    let score = 0;\r\n    if(proceedWithEvaluation) {\r\n      questions.forEach(question => {\r\n        //Check If developer has answered Question\r\n        let devResponseQuestionArray = developer.developerResponse.filter(devRes => devRes.questionId == question.id);\r\n        let devResponseQuestion;\r\n        if(devResponseQuestionArray.length >= 1) {\r\n          devResponseQuestion = devResponseQuestionArray[0];\r\n        }\r\n        let correctAnswer = true;\r\n        question.answer.forEach(answer => {\r\n          if(answer > -1) {\r\n            if(devResponseQuestion.answer.findIndex(item => item == answer) == -1){\r\n              correctAnswer = false;\r\n            }\r\n\r\n          }\r\n\r\n        });\r\n        if(devResponseQuestion.answer.length != question.answer.filter(ans => ans != -1).length) {\r\n          correctAnswer = false;\r\n        }\r\n        if(correctAnswer) {\r\n          score++;\r\n        }\r\n      })\r\n    }\r\n    developer.developerResponse = [];\r\n    let finalScore:number = (score/questions.length) * 100;\r\n    developer.score = finalScore;\r\n    return finalScore;\r\n\r\n  }\r\n    \r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<!-- SIGNUP modal start -->\\r\\n<form #createTestForm=\\\"ngForm\\\">\\r\\n\\r\\n  <div class=\\\"modal\\\" [ngClass]=\\\"{'active':activateModal}\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"tname\\\">Name of Test</label>\\r\\n          <input type=\\\"text\\\" id=\\\"tname\\\" name=\\\"testname\\\" class=\\\"form-control\\\" #testname=\\\"ngModel\\\" [(ngModel)]=\\\"test.name\\\"\\r\\n            required maxlength=\\\"40\\\" placeholder=\\\"Name of test..\\\">\\r\\n          <div *ngIf=\\\"testname.invalid && (testname.dirty || testname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"testname.errors?.required\\\">\\r\\n              TestName is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"testname.errors?.maxlength\\\">\\r\\n              TestName exceeds 40 characters.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"testcategory\\\">Choose appropriate test category</label>\\r\\n          <select id=\\\"testcategory\\\" name=\\\"testcategory\\\" class=\\\"form-control\\\" #testcategory=\\\"ngModel\\\" [(ngModel)]=\\\"test.category\\\">\\r\\n            <option value=\\\"IT\\\">Online Code Assessment</option>\\r\\n            <option value=\\\"Accountancy\\\">Math Quiz</option>\\r\\n            <option value=\\\"Manufacturing\\\">General Knowledge Quiz</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group offset-by-3\\\">\\r\\n          <label for=\\\"testduration\\\">Duration</label>\\r\\n          <input type=\\\"text\\\" id=\\\"testduration\\\" name=\\\"testduration\\\" class=\\\"form-control\\\" #testduration=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"test.duration\\\" placeholder=\\\"in Minutes\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">Password</label>\\r\\n          <input [(ngModel)]=\\\"user.password\\\" type=\\\"text\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"confirmpassword\\\">Confirm Password</label>\\r\\n          <input [(ngModel)]=\\\"user.confirmPassword\\\" type=\\\"text\\\" id=\\\"confirmpassword\\\" name=\\\"password\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Confirm your password\\\">\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <button class=\\\"button signup-button\\\" [disabled]=\\\"!createTestForm.form.valid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { TestService } from '../test.service';\r\nimport { Test } from '../test';\r\n\r\n@Component({\r\n  selector: 'app-create-test',\r\n  templateUrl: './create-test.component.html',\r\n  styleUrls: ['./create-test.component.css']\r\n})\r\nexport class CreateTestComponent implements OnInit {\r\n  test: Test;\r\n  activateModal: Boolean;\r\n  didClose = false;\r\n  @Output() closeCreateTestModal = new EventEmitter<boolean>();\r\n  constructor(private testService: TestService) { }\r\n\r\n  ngOnInit() {\r\n    this.test = this.testService.getNewTest();\r\n    this.activateModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    // this.activateModal = false;\r\n    this.closeCreateTestModal.emit(true);\r\n    this.didClose = true;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log('Printing Signup User ', JSON.stringify(this.test));\r\n    this.testService.addTest(this.test);\r\n    this.closeModal();\r\n    // this.route.navigateByUrl('/register/' + this.user.companyEmail);\r\n    // window.open('Registration.html')\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  delete-question works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-question',\r\n  templateUrl: './delete-question.component.html',\r\n  styleUrls: ['./delete-question.component.css']\r\n})\r\nexport class DeleteQuestionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-container-wrapper\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n    <div id=\\\"section1\\\" class=\\\"section disclaimer\\\">\\r\\n      <h2 class=\\\"section-heading\\\"> Accept Terms and Conditions before proceeding with Test</h2>\\r\\n      <div class=\\\"section disclosure disclosureFont\\\">\\r\\n        Disclaimers have a long legal history. They generally have two purposes: To warn To limit liability A warning\\r\\n        sign is likely\\r\\n        the earliest and easiest manifestation of a disclaimer. “No trespassing” alerts passing individuals\\r\\n        that they are near a private land boundary and also excuses the landowner of some liability if people\\r\\n        visit uninvited. Sometimes, the warning and limitation of liability are based on statutory law. For\\r\\n        example, the state of Washington in the United States has a law that prevents people injured at equestrian\\r\\n        facilities from pursuing legal damages. Any business that boards, trains or allows the riding of\\r\\n        horses has to have a specific sign to enjoy this protection from liability. This sign acts as a disclaimer\\r\\n        much like a “No trespassing” sign in that it informs and specifies limits on facility responsibilities:\\r\\n        To warn To limit liability A warning sign is likely the earliest and easiest manifestation of a disclaimer.\\r\\n        “No trefdgdf Any business that boards, trains or allows the riding of horses has to have a specific\\r\\n        sign to enjoy this protection from liability. This sign acts as a disclaimer much like a “No trespassing”\\r\\n        sign in that it informs and specifies limits on facility responsibilities: To warn To limit liability\\r\\n        A warning sign is likely the earliest and easiest manifestation of a disclaimer.\\r\\n        <br> This sign acts as a disclaimer much like a “No trespassing” sign in that it informs and specifies\\r\\n        limits on facility responsibilities: To warn To limit liability A warning sign is likely the earliest\\r\\n        and easiest manifestation of a disclaimer.\\r\\n        <br> W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve\\r\\n        reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid\\r\\n        errors, but we cannot warrant full correctness of all content. While using this site, you agree to\\r\\n        have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes\\r\\n        Data. All Rights Reserved.\\r\\n      </div>\\r\\n      <div class=\\\"acceptDisclosure disclosureFont\\\">\\r\\n        <input type=\\\"checkbox\\\" id=\\\"acceptDisclosure\\\" name=\\\"acceptDisclosure\\\" value=\\\"true\\\">\\r\\n        <label for=\\\"acceptDisclosure\\\">I agree to Shreyavs Technologies Inc terms and conditions</label>\\r\\n      </div>\\r\\n      <div class=\\\"button-group-center\\\">\\r\\n        <button class=\\\"button save-button\\\" (click)=\\\"onSubmit()\\\">Start Test</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-developer-disclosure',\r\n  templateUrl: './developer-disclosure.component.html',\r\n  styleUrls: ['./developer-disclosure.component.css']\r\n})\r\nexport class DeveloperDisclosureComponent implements OnInit {\r\n\r\n  constructor(private route: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.route.navigateByUrl('/assessment');\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- SIGNIN modal start -->\\r\\n<form [formGroup]=\\\"developerSignInForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"modal\\\" [ngClass]=\\\"{'active':activateModal}\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</div>\\r\\n      <!-- <form> -->\\r\\n      <div *ngIf=\\\"invalidCredentials\\\" class=\\\"alert alert-danger\\\">\\r\\n        Invalid Username/MobileNumber\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"username\\\">Username</label>\\r\\n          <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" formControlName=\\\"userName\\\" required class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Username..\\\">\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lname\\\">Last Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"lname\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" placeholder=\\\"Your last name..\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"mobile\\\">Mobile</label>\\r\\n          <input type=\\\"text\\\" id=\\\"mobile\\\" name=\\\"mobile\\\" formControlName=\\\"mobile\\\" required class=\\\"form-control\\\"\\r\\n            placeholder=\\\"mobile\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <button class=\\\"button signup-button\\\" type=\\\"submit\\\">Sign In</button>\\r\\n\\r\\n      <!-- </form> -->\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-developer-sign-in',\r\n  templateUrl: './developer-sign-in.component.html',\r\n  styleUrls: ['./developer-sign-in.component.css']\r\n})\r\nexport class DeveloperSignInComponent implements OnInit {\r\n  activateModal: Boolean;\r\n  invalidCredentials: Boolean = false;\r\n  @Output() closeDeveloprSignInModal = new EventEmitter<Boolean>();\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private route: Router,\r\n    public loginSrvc: LoginService) { }\r\n\r\n  developerSignInForm = this.fb.group({\r\n    userName: ['',Validators.required],\r\n    mobile: ['',Validators.required]\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.activateModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.activateModal = false;\r\n    this.closeDeveloprSignInModal.emit(true);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if(this.loginSrvc.signIn(this.developerSignInForm.value.userName,\r\n      this.developerSignInForm.value.mobile,true)) {\r\n        console.log('Authentication Success');\r\n        this.closeModal();\r\n        this.route.navigateByUrl('/devdisclosure');\r\n    } else {\r\n      this.invalidCredentials = true;\r\n      console.log('Authentication Failure');\r\n    }    \r\n  }\r\n}\r\n","import { Question } from \"./questions\";\r\n\r\nexport class Developer {\r\n    // name: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    mobile: string;\r\n    referenceCode: string;\r\n    password: string;\r\n    confirmPassword: string; \r\n    testName: string;\r\n    score: number;\r\n    developerResponse: DeveloperResponse[] = [];\r\n}\r\n\r\n\r\nexport class DeveloperResponse {\r\n    // name: string;\r\n    questionId: string;\r\n    answer: number[];\r\n}","import { Injectable } from '@angular/core';\r\nimport { ValidatorFn, FormGroup, FormControl } from '@angular/forms';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailValidatorService {\r\n\r\n  constructor() { }\r\n\r\n  emailValidator(nameRe: RegExp): ValidatorFn {\r\n    return (control: FormControl): {[key: string]: any} | null => {\r\n      let forbidden = !nameRe.test(control.value);\r\n      console.log('emailValidator');\r\n      return forbidden ? {'forbiddenEmail': {value: control.value}} : null;\r\n    };\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-container-wrapper\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n    <div id=\\\"section1\\\" class=\\\"section disclaimer\\\">\\r\\n      <h2 class=\\\"section-heading\\\"> You have Completed Test and Score details are below</h2>\\r\\n      <p>Score: {{retrieveScore()}}</p>\\r\\n      <div class=\\\"button-group-center\\\">\\r\\n        <button class=\\\"button save-button\\\" (click)=\\\"onSubmit()\\\">Exit Test</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CandidateService } from '../candidate.service';\r\nimport { LoginService } from '../login.service';\r\nimport { Developer } from '../developer';\r\n\r\n@Component({\r\n  selector: 'app-exit-test',\r\n  templateUrl: './exit-test.component.html',\r\n  styleUrls: ['./exit-test.component.css']\r\n})\r\nexport class ExitTestComponent implements OnInit {\r\n  \r\n  constructor(private candidateSrvc: CandidateService,\r\n              private loginSrvc: LoginService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  retrieveScore(): number {\r\n    let userLoggedIn: Developer = this.loginSrvc.getUserSignedIn();\r\n        let dev = this.candidateSrvc.getCandidate(userLoggedIn.email);\r\n    return dev && dev.score ? dev.score : 0;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.loginSrvc.signOut();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<footer>\\r\\n  <ul class=\\\"footer\\\">\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">About Us</a>\\r\\n      </li>\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">Solutions</a>\\r\\n      </li>\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">Question Contributor</a>\\r\\n      </li>\\r\\n  </ul>\\r\\n  <ul class=\\\"footer\\\">\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">Contact Us</a>\\r\\n      </li>\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">vijay.nagarajan4283@gmail com\\r\\n          </a>\\r\\n      </li>\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">Question Contributor</a>\\r\\n      </li>\\r\\n  </ul>\\r\\n  <ul class=\\\"footer\\\">\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">Privacy Policy</a>\\r\\n      </li>\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">Terms of Service\\r\\n          </a>\\r\\n      </li>\\r\\n      <li class=\\\"footer\\\">\\r\\n          <a href=\\\"#\\\" target=\\\"_blank\\\">Cookie Policy</a>\\r\\n      </li>\\r\\n  </ul>\\r\\n  <div>\\r\\n      <div class=\\\"logo\\\">\\r\\n          MeritTracker\\r\\n      </div>\\r\\n      <div class=\\\"copyrighttext\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"fa fa-copyright\\\"></a>2018-2022 Shreyvs Technologies INC\\r\\n      </div>\\r\\n      <div class=\\\"icons\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"fa fa-facebook\\\"></a>\\r\\n          <a href=\\\"#\\\" class=\\\"fa fa-twitter\\\"></a>\\r\\n          <a href=\\\"#\\\" class=\\\"fa fa-linkedin\\\"></a>\\r\\n          <a href=\\\"#\\\" class=\\\"fa fa-instagram\\\"></a>\\r\\n      </div>\\r\\n  </div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"i.menuicon {\\r\\n    font-size:24px;\\r\\n    margin-right: 5px;\\r\\n    border: none;\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    cursor: pointer;\\r\\n    /* top: -19px;\\r\\n    left:-11px; */\\r\\n}\\r\\n\"","module.exports = \"<app-sign-in *ngIf=\\\"signIn\\\" (closeSignInModal)=\\\"onCloseModal($event)\\\"></app-sign-in>\\r\\n<app-sign-up *ngIf=\\\"signUp\\\" (closeSignUpModal)=\\\"onCloseModal($event)\\\"></app-sign-up>\\r\\n<app-developer-sign-in *ngIf=\\\"developerSignIn\\\" (closeDeveloprSignInModal)=\\\"onCloseModal($event)\\\"></app-developer-sign-in>\\r\\n<ul class=\\\"horizontal\\\">\\r\\n<li class=\\\"vertical\\\" *ngIf=\\\"menubarFlag\\\">\\r\\n    <!-- <a href=\\\"#manageTests\\\" id=\\\"manageTests\\\">Manage Tests</a> -->\\r\\n    <a id=\\\"menu\\\" class=\\\"menubar\\\" (click)=\\\"toggleDisplayOfNavPanel()\\\">\\r\\n        <!-- <i class=\\\"fa fa-bars\\\" aria-hidden=\\\"true\\\">Menu</i> -->\\r\\n        <!-- <i class=\\\"fas fa-bars\\\" style=\\\"font-size:24px;color:white\\\">f0c9</i> -->\\r\\n        <i class=\\\"fa menuicon\\\">&#xf0c9;&nbsp;</i>\\r\\n    </a>\\r\\n\\r\\n</li>\\r\\n  <li class=\\\"horizontal\\\">\\r\\n      <a href=\\\"#home\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"horizontal\\\">\\r\\n      <a href=\\\"#news\\\">News</a>\\r\\n  </li>\\r\\n  <li class=\\\"horizontal\\\">\\r\\n      <a href=\\\"#contact\\\">Contact</a>\\r\\n  </li>\\r\\n  <li class=\\\"horizontal\\\">\\r\\n      <a routerLink=\\\"/register\\\" href=\\\"#about\\\">About</a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"!loginSrvc.userSignedIn()\\\" class=\\\"horizontal\\\">\\r\\n      <a (click)=\\\"signUpFn(true)\\\" >\\r\\n          SignUp\\r\\n      </a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"!loginSrvc.userSignedIn()\\\" class=\\\"horizontal\\\" style=\\\"float:right\\\">\\r\\n      <a (click)=\\\"developerSignIn=true\\\">\\r\\n          Developer SignIn\\r\\n      </a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"!loginSrvc.userSignedIn()\\\" class=\\\"horizontal\\\" style=\\\"float:right\\\">\\r\\n    <a (click)=\\\"signIn=true\\\" >\\r\\n        Employer SignIn\\r\\n    </a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"loginSrvc.userSignedIn()\\\" class=\\\"horizontal\\\" style=\\\"float:right\\\">\\r\\n        <a (click)=\\\"loginSrvc.signOut()\\\">\\r\\n            SignOut\\r\\n        </a>\\r\\n      </li>    \\r\\n</ul>\"","import { Component, OnInit, ChangeDetectorRef, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { from, Subscription } from 'rxjs';\r\nimport { LoginService } from '../login.service';\r\nimport { MenubarService} from '../menubar.service'\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit,OnDestroy {\r\n  menubarFlag: boolean = true;\r\n  signUp: Boolean = false;\r\n  signIn: Boolean = false;\r\n  developerSignIn: Boolean = false;\r\n  displayNavPanel: boolean = true;\r\n  subscription: Subscription;\r\n  @Output() toggleNavPanel = new EventEmitter<boolean>();\r\n  constructor(public loginSrvc:LoginService,\r\n              private menubarSvc:MenubarService,\r\n              private cdr: ChangeDetectorRef) { \r\n    \r\n    this.subscription = this.menubarSvc.displayNavPanel$.subscribe(\r\n        displayNavPanel => {\r\n          console.log('Confirm Subscription in Header');\r\n          if(!displayNavPanel) {\r\n            //Hide NavBar Panel on MouseDown event\r\n            this.toggleDisplayOfNavPanel(); \r\n          }\r\n          \r\n        }\r\n      );\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n    console.log('HeaderComponent ngOnInit',this.menubarFlag);\r\n  }\r\n\r\n  signUpFn(flag:Boolean) {\r\n    this.signUp = flag;\r\n  }\r\n\r\n  onCloseModal(close: boolean) {\r\n    this.signIn = !close;\r\n    this.developerSignIn = !close;\r\n    this.signUp = !close;\r\n  }\r\n\r\n  setMenubarBtnFlag(flag: boolean): void {\r\n    this.menubarFlag = flag;\r\n    this.cdr.detectChanges();\r\n    this.toggleDisplayOfNavPanel();\r\n  }\r\n\r\n  toggleDisplayOfNavPanel(): void {\r\n    this.displayNavPanel = this.menubarFlag ? !this.displayNavPanel : true;\r\n    this.toggleNavPanel.emit(this.displayNavPanel);\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    // prevent memory leak when component destroyed\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n ","module.exports = \"\"","module.exports = \"<div id=\\\"main-screen\\\" class=\\\"main-screen\\\">\\r\\n\\r\\n  <div class=\\\"form-container-wrapper\\\">\\r\\n\\r\\n    <div class=\\\"form-container\\\">\\r\\n\\r\\n      <div id=\\\"section1\\\" class=\\\"section\\\">\\r\\n        <h2 class=\\\"section-heading\\\"> Online Assessement </h2>\\r\\n        <p class=\\\"question challengeFont\\\">\\r\\n          1. Given an array of Player objects, write a comparator that sorts them in order of decreasing score; if or\\r\\n          more players\\r\\n          have the same score, sort those players alphabetically by name. To do this, you must create a Checker\\r\\n          class that implements the Comparator interface, then write an int compare(Player a, Player b) method\\r\\n          implementing the Comparator.compare(T o1, T o2) method.\\r\\n\\r\\n        </p>\\r\\n        <p class=\\\"question challengeFont\\\">\\r\\n          1. Given an array of Player objects, write a comparator that sorts them in order of decreasing score; if or\\r\\n          more players\\r\\n          have the same score, sort those players alphabetically by name. To do this, you must create a Checker\\r\\n          class that implements the Comparator interface, then write an int compare(Player a, Player b) method\\r\\n          implementing the Comparator.compare(T o1, T o2) method.\\r\\n\\r\\n        </p>\\r\\n        <div class=\\\"button-group-right\\\">\\r\\n          <button class=\\\"button save-button\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-container\\\">\\r\\n\\r\\n      <div id=\\\"section1\\\" class=\\\"section\\\">\\r\\n        <h2 class=\\\"section-heading\\\"> Online Assessement </h2>\\r\\n        <p class=\\\"question challengeFont\\\">\\r\\n          1. Given an array of Player objects, write a comparator that sorts them in order of decreasing score; if or\\r\\n          more players\\r\\n          have the same score, sort those players alphabetically by name. To do this, you must create a Checker\\r\\n          class that implements the Comparator interface, then write an int compare(Player a, Player b) method\\r\\n          implementing the Comparator.compare(T o1, T o2) method.\\r\\n\\r\\n        </p>\\r\\n        <p class=\\\"question challengeFont\\\">\\r\\n          1. Given an array of Player objects, write a comparator that sorts them in order of decreasing score; if or\\r\\n          more players\\r\\n          have the same score, sort those players alphabetically by name. To do this, you must create a Checker\\r\\n          class that implements the Comparator interface, then write an int compare(Player a, Player b) method\\r\\n          implementing the Comparator.compare(T o1, T o2) method.\\r\\n\\r\\n        </p>\\r\\n        <div class=\\\"button-group-right\\\">\\r\\n          <button class=\\\"button save-button\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>    \\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\nimport { Developer } from './developer';\r\nimport { CandidateService } from './candidate.service';\r\nimport { UserService } from './user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  developer: Developer;\r\n  user: User;\r\n  constructor(private candidateSrvc: CandidateService,\r\n              private userSrvc: UserService,\r\n              private route: Router  ) { }\r\n\r\n  userSignedIn(): Boolean {\r\n    return (this.developer || this.user) ? true : false; \r\n  }\r\n\r\n  signIn(userName: string, passwd: string, userIsDeveloper: Boolean): Boolean {\r\n\r\n    if(userIsDeveloper && this.candidateSrvc.authenticateCandidate(userName,passwd)) {\r\n      this.developer = this.candidateSrvc.getCandidate(userName);\r\n      this.user = null;\r\n      return true;     \r\n    } else if(!userIsDeveloper && this.userSrvc.authenticateUser(userName,passwd)){\r\n      this.user = this.userSrvc.getUser(userName);\r\n      this.developer = null;\r\n      return true;\r\n    } \r\n    return false;\r\n  }\r\n\r\n  getUserSignedIn(): any {\r\n    return this.developer ? this.developer : this.user ? this.user : null;\r\n  }\r\n\r\n  signOut(): void {\r\n    this.developer = null;\r\n    this.user = null;\r\n    this.route.navigateByUrl('/');\r\n  }\r\n}\r\n","module.exports = \".addQuestionButton {\\r\\n    margin-left: 2%;\\r\\n}\"","module.exports = \"<div class=\\\"form-container-wrapper\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n      <div id=\\\"section_manageQuestions\\\" class=\\\"section\\\">\\r\\n          \\r\\n          <h2 class=\\\"section-heading\\\"> {{testName}} </h2>\\r\\n          <button class=\\\"button save-button addQuestionButton\\\" (click)=\\\"addEditQuestion()\\\">Add New Question</button>\\r\\n          <app-modify-question *ngIf=\\\"addQuestion\\\" [action]=\\\"action\\\" (closeModifyQuestionModal)=\\\"oncloseModal($event)\\\"></app-modify-question>\\r\\n          <div *ngFor=\\\"let question of loadQuestions(); let i=index\\\" class=\\\"section accordion-wrapper\\\">\\r\\n              <button class=\\\"accordion\\\" id=\\\"questionButton\\\">{{question.questionDescription}}</button>\\r\\n              <div class=\\\"accordion-container\\\">\\r\\n                  <p class=\\\"answer\\\" *ngFor=\\\"let option of question.choice; let j=index\\\">{{j+1}}. {{option}}</p>\\r\\n                  <div class=\\\"button-group-right\\\">\\r\\n                      <button class=\\\"button save-button\\\" (click)=\\\"addEditQuestion(question)\\\">Edit</button>\\r\\n                      <app-modify-question *ngIf=\\\"modifyQuestion\\\" [action]=\\\"action\\\" (closeModifyQuestionModal)=\\\"oncloseModal($event)\\\"></app-modify-question>\\r\\n                      <button class=\\\"button save-button\\\" onclick=\\\"openModal(this)\\\">Delete hero</button>\\r\\n                      <div id=\\\"deleteModal\\\"></div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n\\r\\n</div>    \"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { QuestionsService } from '../questions.service';\r\nimport { Test } from '../test';\r\nimport { Question } from '../questions';\r\nimport { AccordionService } from '../accordion.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Action } from '../action';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-manage-questions',\r\n  templateUrl: './manage-questions.component.html',\r\n  styleUrls: ['./manage-questions.component.css']\r\n})\r\nexport class ManageQuestionsComponent implements OnInit {\r\n  // questions: Question[] ;\r\n  addQuestion: Boolean;\r\n  modifyQuestion: Boolean;\r\n  // testName: string;\r\n  action: Action;\r\n  constructor(private route: ActivatedRoute,\r\n              private questionService: QuestionsService,\r\n              private accordionService: AccordionService) { }\r\n\r\n  ngOnInit() {\r\n    this.accordionService.initializeAccordion();\r\n    this.action = new Action();\r\n    this.route.queryParams.subscribe(params => \r\n       this.action.testName = params['testName']\r\n\r\n    );\r\n  }\r\n\r\n  loadQuestions(): Question[] {\r\n    return this.questionService.getQuestions(\r\n          this.action.testName ? this.action.testName : '');\r\n  }\r\n\r\n  addEditQuestion(question: any) : void {\r\n    if(question) {\r\n      this.modifyQuestion = true;\r\n      this.action.questionId = question.id;\r\n    } else {\r\n      this.action.questionId = null;\r\n      this.addQuestion = true;\r\n    }\r\n    console.log('Question',question);\r\n  }\r\n\r\n  oncloseModal(close: boolean) {\r\n    this.addQuestion = !close;\r\n    this.modifyQuestion = !close;\r\n    this.accordionService.initializeAccordion();\r\n    this.loadQuestions();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenubarService {\n\n  constructor() { }\n\n  // OBservable String\n  private displayNavPanel = new Subject<boolean>();\n\n  displayNavPanel$ = this.displayNavPanel.asObservable();\n\n  //toggledisplay\n  hideVerticalNavPanel(displayPanel: boolean) {\n    this.displayNavPanel.next(displayPanel);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Modify Candidate modal start -->\\r\\n<form [formGroup]=\\\"candidateForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\t<div class=\\\"modal\\\" [ngClass]=\\\"{'active':activateModal}\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"fname\\\">First Name</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"fname\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" required placeholder=\\\"Your name..\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"lname\\\">Last Name</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"lname\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" required placeholder=\\\"Your last name..\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"companyemail\\\">Email</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"companyemail\\\" name=\\\"companyemail\\\" class=\\\"form-control\\\"\\r\\n          \\t\\t\\t\\t\\tformControlName=\\\"email\\\" required placeholder=\\\"vijay.nagarajan4283@gmail.com\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"mobile\\\">Phone/Mobile</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"mobile\\\" name=\\\"mobile\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\" placeholder=\\\"647-891-4283\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"mobile\\\">Select the Test</label>\\r\\n\\t\\t\\t\\t\\t<select id=\\\"test\\\" name=\\\"testName\\\" class=\\\"form-control\\\" formControlName=\\\"testName\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let test of testSrvc.getAllTests()\\\" [value]=\\\"test.name\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{test.name}}\\r\\n\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"button signup-button\\\" [disabled]=\\\"!candidateForm.valid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n</form>\"","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Action } from '../action';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { CandidateService } from '../candidate.service';\r\nimport { Developer } from '../developer';\r\nimport { TestService } from '../test.service';\r\n\r\n@Component({\r\n  selector: 'app-modify-candidate',\r\n  templateUrl: './modify-candidate.component.html',\r\n  styleUrls: ['./modify-candidate.component.css']\r\n})\r\nexport class ModifyCandidateComponent implements OnInit {\r\n  activateModal: Boolean;\r\n  editAction: Boolean;\r\n  @Input() action: Action;\r\n  @Output() closeModifyQuestionModal = new EventEmitter<boolean>();\r\n  constructor(private fb: FormBuilder,  \r\n              private candidateSrvc: CandidateService,\r\n              public testSrvc: TestService) { }\r\n\r\n  candidateForm = this.fb.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['',Validators.required],\r\n    email: ['',Validators.required],\r\n    mobile: [''],\r\n    testName: ['',Validators.required]\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.activateModal = true;\r\n    if(this.action && this.action.developerEmail) {\r\n      this.loadCandidate(this.action.developerEmail);\r\n    }\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.closeModifyQuestionModal.emit(true);\r\n  }\r\n\r\n  loadCandidate(candidateEmail: string): void {\r\n    console.log('candidateEmail loadCandidate ',candidateEmail );\r\n    let dev:Developer = this.candidateSrvc.getCandidate(candidateEmail);\r\n    this.candidateForm.controls.firstName.setValue(dev.firstName);\r\n    this.candidateForm.controls.lastName.setValue(dev.lastName);\r\n    this.candidateForm.controls.email.setValue(dev.email);\r\n    this.candidateForm.controls.mobile.setValue(dev.mobile); \r\n    this.candidateForm.controls.testName.setValue(dev.testName);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    let candidate:Developer = new Developer();\r\n    candidate.firstName = this.candidateForm.value.firstName;\r\n    candidate.lastName = this.candidateForm.value.lastName;\r\n    candidate.email = this.candidateForm.value.email;\r\n    candidate.mobile = this.candidateForm.value.mobile;\r\n    candidate.testName = this.candidateForm.value.testName;\r\n    this.candidateSrvc.addCandidate(candidate);  \r\n    this.closeModal();\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".repeat-button {\\r\\n\\twidth: 100%;\\r\\n\\tpadding: 10px 5px;\\r\\n\\tborder-radius: 5px;\\r\\n\\ttext-align: center;\\r\\n\\tmargin:10px 5px;\\r\\n}\"","module.exports = \"<!-- Manage Questions modal start -->\\r\\n<form [formGroup]=\\\"questionForm\\\">\\r\\n\\r\\n\\t<div class=\\\"modal\\\" [ngClass]=\\\"{'active':activateModal}\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</div>\\r\\n\\t\\t\\t<!-- Question -->\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group offset-1\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"question\\\">Question</label>\\r\\n\\t\\t\\t\\t\\t<textarea  rows=\\\"4\\\" cols=\\\"100\\\" id=\\\"question\\\" name=\\\"question\\\" formControlName=\\\"question\\\" class=\\\"form-control\\\" placeholder=\\\"Question name..\\\"></textarea>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- Answer -->\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<!-- <label for=\\\"answer\\\">&nbsp;</label> -->\\r\\n\\t\\t\\t\\t\\t<button class=\\\"button repeat-button\\\" (click)=\\\"addAlias()\\\">Add</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div formArrayName=\\\"aliases\\\" *ngFor=\\\"let option of aliases.controls; let i=index\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group offset-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"option\\\">Option</label>\\r\\n\\t\\t\\t\\t\\t\\t<textarea rows=\\\"4\\\" cols=\\\"50\\\" id=\\\"option\\\" name=\\\"option\\\" formControlName=\\\"choice\\\" class=\\\"form-control\\\" placeholder=\\\"Enter possible choices..\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group offset-by-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"container\\\" style=\\\"--container-left-pos:2px\\\">Answer\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked=\\\"checked\\\" value=\\\"selected\\\" formControlName=\\\"answer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"checkmark\\\" style=\\\"--checkmark-left-pos:10px;--checkmark-top-pos:20px\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group offset-by-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"answer\\\">&nbsp;</label>\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"button repeat-button\\\" routerLink=\\\"/register\\\" (click)=\\\"onDelete()\\\">Delete</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div><!-- </div> -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<button class=\\\"button signup-button\\\" [disabled]=\\\"!questionForm.valid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n</form>\\r\\n\\r\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormBuilder, FormArray, FormGroup, AbstractControl } from '@angular/forms';\r\n\r\nimport { QuestionsService } from '../questions.service';\r\nimport { Question } from '../questions';\r\nimport { Test } from '../test';\r\nimport { Action } from '../action';\r\n\r\n\r\n@Component({\r\n  selector: 'app-modify-question',\r\n  templateUrl: './modify-question.component.html',\r\n  styleUrls: ['./modify-question.component.css']\r\n})\r\nexport class ModifyQuestionComponent implements OnInit {\r\n  question: Question;\r\n  activateModal: Boolean;\r\n  editAction: Boolean;\r\n  // @Input('test') testName: string;\r\n  // @Input('question') questionId: string;\r\n  @Input() action: Action;\r\n  @Output() closeModifyQuestionModal = new EventEmitter<boolean>();\r\n  constructor(private questionsService: QuestionsService,\r\n    private fb: FormBuilder) { }\r\n\r\n  questionForm = this.fb.group({\r\n    question: ['question'],\r\n\r\n    aliases: this.fb.array([\r\n      this.fb.group({\r\n        choice: [''],\r\n        answer: [''],\r\n        deleteButton: ['Delete']\r\n      })\r\n    ])\r\n  });\r\n\r\n  get aliases() {\r\n    return this.questionForm.get('aliases') as FormArray;\r\n  }\r\n\r\n  addAlias() {\r\n    this.aliases.push(this.fb.group({\r\n      choice: [''],\r\n      answer: [''],\r\n      deleteButton: ['Delete']\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    console.log('ModifyQuestionComponent print testName11', this.action.testName + ' ' + this.action.questionId);\r\n    this.editAction = this.action.testName && this.action.questionId ? true : false;\r\n    if (this.action.testName && this.action.questionId) {\r\n      this.populateQuestion();\r\n    }\r\n    this.activateModal = true;\r\n  }\r\n\r\n  populateQuestion() {\r\n    let question = this.questionsService.getQuestion(this.action.testName, this.action.questionId);\r\n    //Remove Default selections for Edit scenario\r\n    if (this.aliases.length > 0) {  \r\n      for (let count = this.aliases.length - 1; count >= 0; count--) {\r\n        this.aliases.removeAt(count);\r\n      }\r\n    }\r\n    this.questionForm.controls.question.setValue(question.questionDescription);\r\n    let index = 0;\r\n    question.choice.map(choiceDesc => {\r\n      this.aliases.push(this.fb.group({\r\n      choice: [choiceDesc],\r\n      answer: [false],\r\n      deleteButton: ['Delete']\r\n    }));\r\n  });\r\n  if(question.answer && question.answer.length > 0  ) {\r\n    question.answer.forEach(answer => {\r\n      if(answer < question.choice.length) {\r\n        // this.aliases[answer].answer.setValue(true);\r\n        if(answer >= 0) {\r\n          // console.log('this.aliases.at(answer)',this.aliases.at(answer).controls.answer.setValue(true));\r\n          let fg:FormGroup = <FormGroup>this.aliases.at(answer);\r\n          fg.controls.answer.setValue(true);\r\n        }\r\n      }\r\n    }); \r\n    this.questionForm.controls.question.setValue(question.questionDescription);\r\n }\r\n    question.choice = this.questionForm.value.aliases.map(alias => alias.choice);\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.closeModifyQuestionModal.emit(true);\r\n  }\r\n\r\n  onDelete(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log('Printing Question ', this.questionForm.value.question);\r\n    console.log('Printing Answer ', this.questionForm.value.aliases[1]);\r\n    let question: Question = this.questionsService.getNewQuestion();\r\n    let answers: string[];\r\n    question.testName = this.action.testName;\r\n    question.questionDescription = this.questionForm.value.question;\r\n    question.choice = this.questionForm.value.aliases.map(alias => alias.choice);\r\n    let index = 0;\r\n    question.answer = this.questionForm.value.aliases.map(alias => {\r\n      index++;\r\n      if(alias.answer) {\r\n        \r\n        return (index-1);\r\n      } \r\n      return -1;\r\n      \r\n    });\r\n    this.questionForm.value.aliases.map(alias => {\r\n      console.log('Anwer Choice',alias.answer);\r\n    });\r\n    console.log('Printing complete Question Saved ', question);    \r\n    //Action = Edit\r\n    if(this.action.questionId) {\r\n      question.id = this.action.questionId;\r\n      this.questionsService.editQuestion(question);\r\n    } else {\r\n      //Action = Add\r\n      this.questionsService.addQuestion(question);\r\n    }\r\n    this.closeModal();\r\n\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appPhoneNumber]'\r\n})\r\nexport class PhoneNumberDirective {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appPhoneValidator]'\r\n})\r\nexport class PhoneValidatorDirective {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"assessementForm\\\">\\r\\n\\r\\n<div id=\\\"section1\\\" class=\\\"section\\\">\\r\\n    <h2 class=\\\"section-heading\\\"> Java Online Assessement </h2>\\r\\n    <p class=\\\"question challengeFont\\\">\\r\\n      {{question.questionDescription}}\\r\\n    </p>\\r\\n    <div *ngIf=\\\"choicesLoaded\\\">\\r\\n    <div formArrayName=\\\"aliases\\\" *ngFor=\\\"let choice of aliases.controls; let i=index\\\">\\r\\n      <div class=\\\"answer challengeFont\\\" [formGroupName]=\\\"i\\\">\\r\\n        <!-- <input type=\\\"checkbox\\\" name=\\\"optionCheckBox\\\" checked=\\\"checked\\\" value=\\\"selected\\\">\\r\\n                  <label for=\\\"optionCheckBox\\\">Option 1</label> -->\\r\\n        <label class=\\\"container\\\">{{choice.get('choiceDesc').value}}\\r\\n          <input type=\\\"checkbox\\\" checked=\\\"checked\\\" value=\\\"selected\\\" formControlName=\\\"option\\\">\\r\\n          <span class=\\\"checkmark\\\"></span>\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n    <div class=\\\"button-group-right\\\">\\r\\n      <button class=\\\"button save-button\\\" (click)=\\\"nextQuestion()\\\">Next</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>  \"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Question } from '../questions';\r\nimport { FormBuilder, FormArray } from '@angular/forms';\r\nimport { DeveloperResponse } from '../developer';\r\nimport { CandidateService } from '../candidate.service';\r\nimport { TestService } from '../test.service';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-question-assessment',\r\n  templateUrl: './question-assessment.component.html',\r\n  styleUrls: ['./question-assessment.component.css']\r\n})\r\nexport class QuestionAssessmentComponent implements OnInit {\r\n  @Output() moveToNextQuestion = new EventEmitter<Boolean>();\r\n  constructor(private fb: FormBuilder,\r\n              private candidateSrvc: CandidateService,\r\n              private loginSrvc: LoginService) { }\r\n  @Input() question:Question;\r\n  choicesLoaded: Boolean = false;  \r\n  assessementForm = this.fb.group({\r\n    aliases: this.fb.array([\r\n      this.fb.group({\r\n        choiceDesc: [''],\r\n        option: [false]\r\n      })\r\n    ])\r\n  });\r\n\r\n  get aliases() {\r\n    return this.assessementForm.get('aliases') as FormArray;\r\n  }\r\n\r\n  addAliases() {\r\n    this.aliases.push(this.fb.group({\r\n      choiceDesc: [''],\r\n      option: [false]\r\n    }))\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.populateChoice(null);  \r\n  }\r\n\r\n  populateChoice(question: Question) {\r\n    if(question){\r\n      this.question = question;\r\n    }\r\n    //Remove Default selections for Edit scenario\r\n    if (this.aliases.length > 0) {  \r\n      for (let count = this.aliases.length - 1; count >= 0; count--) {\r\n        this.aliases.removeAt(count);\r\n      }\r\n    }\r\n    this.question.choice.map(choiceDescription => {\r\n      this.aliases.push(this.fb.group({\r\n      choiceDesc: [choiceDescription],\r\n      option: [false]\r\n    }));\r\n  });\r\n//   if(this.question.answer && this.question.answer.length > 0  ) {\r\n//     this.question.answer.forEach(answer => {\r\n//       if(answer < this.question.choice.length) {\r\n//         // this.aliases[answer].answer.setValue(true);\r\n//         if(answer >= 0) {\r\n//           // console.log('this.aliases.at(answer)',this.aliases.at(answer).controls.answer.setValue(true));\r\n//           this.aliases.at(answer).controls.answer.setValue(true)\r\n//         }\r\n//       }\r\n//     }); \r\n    \r\n//  }  \r\n  this.choicesLoaded = true;\r\n  console.log('PopulateChoice ',this.aliases);\r\n  }\r\n\r\n  nextQuestion() {\r\n    let count = 0;\r\n    let devResponse = new DeveloperResponse();\r\n    devResponse.questionId = this.question ? this.question.id : null;\r\n    devResponse.answer = this.assessementForm.value.aliases.map(alias => {\r\n     \r\n      let chosenAnswer = alias.option ? count : -1;\r\n      // devResponse.answer.push(chosenAnswer);\r\n      count++;\r\n      return chosenAnswer;\r\n      // return alias.option ? \r\n    });\r\n    this.candidateSrvc.captureResponse(devResponse,this.loginSrvc.getUserSignedIn());\r\n    this.moveToNextQuestion.emit(true);\r\n  }\r\n\r\n  captureResponse(answer: any) {\r\n    console.log('Developer Response for Question', answer);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Question } from './questions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionsService {\r\n  questions: Question[] = [\r\n    {testName: 'Java8 Online Assessment' , questionDescription: 'Choose 7 wonders of the world', choice: ['Taj Mahal', 'New York','White House', 'Toronto'], id:'1111', answer: [1]},\r\n    {testName: 'Javascript ES6 Fundamentals Assessment' , questionDescription: 'Choose 7 wonders of the world', choice: ['Taj Mahal', 'New York','White House', 'Toronto'], id:'2222', answer: [1]},\r\n    {testName: 'HTML CSS3 and Javascript' , questionDescription: 'Choose 7 wonders of the world', choice: ['Taj Mahal', 'New York','White House', 'Toronto'], id:'3333',answer: [1]},\r\n    {testName: 'AngularJS Assessment' , questionDescription: 'Choose 7 wonders of the world', choice: ['Taj Mahal', 'New York','White House', 'Toronto'], id:'4444',answer: [1]},\r\n    {testName: 'Angular Material Assessment' , questionDescription: 'Choose 7 wonders of the world', choice: ['Taj Mahal', 'New York','White House', 'Toronto'], id:'5555',answer: [1]},\r\n    {testName: 'React Assessment' , questionDescription: 'Choose 7 wonders of the world', choice: ['Taj Mahal', 'New York','White House', 'Toronto'], id:'6666',answer: [1]}\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  getQuestions(testName: string): Question[] {\r\n    return this.questions && this.questions.length > 0 ? this.questions.filter(question => \r\n          question.testName.indexOf(testName) > -1): null;\r\n  }\r\n\r\n  getQuestion(testName: string, questionId: string): Question {\r\n    let questions: Question[] = this.questions && this.questions.length > 0 ? this.questions.filter(question => \r\n            question.testName.indexOf(testName) > -1 && question.id.indexOf(questionId) > -1) : null ;\r\n    return questions && questions.length > 0 ? questions[0] : null;       \r\n  }\r\n\r\n  //Add new question\r\n  addQuestion(question: Question) : void {\r\n    console.log('Question Service ID',new Date().getTime());\r\n    question.id = new Date().getTime().toString();\r\n    this.questions.push(question);\r\n  }\r\n\r\n  getNewQuestion(): Question {\r\n    return new Question(' ',' ',[],' ');\r\n  }\r\n\r\n  editQuestion(modifiedQuestion: Question) : void {\r\n    let questions: Question[] =  this.questions.filter(question => \r\n      modifiedQuestion && question.id == modifiedQuestion.id\r\n    );\r\n    if(questions.length > 0) {\r\n      questions[0].questionDescription = modifiedQuestion.questionDescription;\r\n      questions[0].choice = modifiedQuestion.choice;\r\n      if(questions[0].answer && questions[0].answer.length > 0){\r\n        questions[0].answer = modifiedQuestion.answer;        \r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n}\r\n","import { Developer } from \"./developer\";\r\n\r\nexport class Question {\r\n    testName: string;\r\n    questionDescription: string;\r\n    // answers: string[];\r\n    choice: string[];\r\n    answer: number[];\r\n    id: string;\r\n\r\n    constructor(testName: string,questionDescription: string,answers: string[],id: string ){\r\n        this.testName = testName;\r\n        this.questionDescription = questionDescription;\r\n        // this.answers = [];\r\n        this.choice = [];\r\n        this.id = id;\r\n\r\n    }\r\n    // mobile: string;\r\n    // password: string;\r\n    // confirmPassword: string;\r\n    // companyname: string;\r\n    // websiteurl: string;\r\n    // industry: string;\r\n    // country: string;\r\n    // companyaddress: string;\r\n    // city: string;\r\n    // postalcode: string;\r\n    // nameoncard: string;\r\n    // cardnumber: string;\r\n    // cardmonthofexpiry: string;\r\n    // cardyearofexpiry: string;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\ndeclare var $: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScrollbarService {\r\n\r\n  constructor() { }\r\n\r\nscrollToNextSection(index: number): void {\r\n  console.log('printing section1 scrollToNthChild', index);\r\n  var scrollToSection = $(\"div.section:nth-child(\" + index + \")\").position();\r\n  console.log('printing section1 scrollToNthChild', scrollToSection);\r\n  $(\"html, body\").animate({\r\n    scrollTop: scrollToSection.top\r\n  }\r\n    , 1000);  \r\n  $(document).ready(function () {\r\n\r\n    function scrollToNthChild(index) {\r\n      // console.log('printing section1 scrollToNthChild', index);\r\n      // var scrollToSection = $(\"div.section:nth-child(\" + index + \")\").position();\r\n      // console.log('printing section1 scrollToNthChild', scrollToSection);\r\n      // $(\"html, body\").animate({\r\n      //   scrollTop: scrollToSection.top\r\n      // }\r\n      //   , 1000);\r\n    }\r\n    //jQuery methods go here...\r\n\r\n    $(\"li.vertical > a\").click(function () {\r\n      var selectedItemIndex = $(\"li.vertical\").index($(this).parent()) + 1;\r\n      console.log('Index of ', selectedItemIndex);\r\n      scrollToNthChild(selectedItemIndex);\r\n    });\r\n\r\n\r\n\r\n\r\n  });\r\n\r\n}\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- SIGNIN modal start -->\\r\\n<form [formGroup]=\\\"userSignInForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\t<div class=\\\"modal\\\" [ngClass]=\\\"{'active':activateModal}\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</div>\\r\\n\\t\\t\\t<!-- <form> -->\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"invalidCredentials\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\tInvalid Username/Password\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"username\\\">Username</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" formControlName=\\\"userName\\\" required class=\\\"form-control\\\" placeholder=\\\"Username..\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lname\\\">Last Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"lname\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" placeholder=\\\"Your last name..\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" required class=\\\"form-control\\\" placeholder=\\\"password\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"button signup-button\\\" type=\\\"submit\\\">Sign In</button>\\r\\n\\r\\n\\t\\t\\t<!-- </form> -->\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../login.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  credentials = {username: '', password: ''};  \r\n  activateModal: Boolean;\r\n  invalidCredentials: Boolean = false;\r\n  @Output() closeSignInModal = new EventEmitter<boolean>();\r\n  constructor(private fb: FormBuilder,\r\n              private route: Router,\r\n              public loginSrvc: LoginService,\r\n              public authSrvc: AuthService) { }\r\n\r\n  userSignInForm = this.fb.group({\r\n    userName: ['',Validators.required],\r\n    password: ['',Validators.required]      \r\n  });\r\n  \r\n  ngOnInit() {\r\n    this.activateModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.activateModal = false;\r\n    this.closeSignInModal.emit(true);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if(this.loginSrvc.signIn(this.userSignInForm.value.userName,\r\n      this.userSignInForm.value.password,false)) {\r\n        this.closeModal();\r\n        this.login();\r\n        this.route.navigateByUrl('/viewtests');\r\n    } else {\r\n      this.invalidCredentials = true;\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.credentials.username = this.userSignInForm.value.userName;\r\n    this.credentials.password = this.userSignInForm.value.password;\r\n\r\n    this.authSrvc.authenticate(this.credentials, () => {\r\n        this.route.navigateByUrl('/');\r\n    });\r\n    return false;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- SIGNUP modal start -->\\r\\n<form #signUpForm=\\\"ngForm\\\">\\r\\n\\r\\n\\t<div class=\\\"modal\\\" [ngClass]=\\\"{'active':activateModal}\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"fname\\\">First Name</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"fname\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" #firstname=\\\"ngModel\\\" [(ngModel)]=\\\"user.firstName\\\" required maxlength=\\\"40\\\" placeholder=\\\"Your name..\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"firstname.invalid && (firstname.dirty || firstname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"firstname.errors?.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tFirstName is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"firstname.errors?.maxlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tFirstName exceeds 40 characters.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"lname\\\">Last Name</label>\\r\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"user.lastName\\\" required maxlength=\\\"40\\\" type=\\\"text\\\" id=\\\"lname\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" #lastname=\\\"ngModel\\\" placeholder=\\\"Your last name..\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"lastname.errors?.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tLastName is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"lastname.errors?.maxlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tLastName exceeds 40 characters.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"companyemail\\\">Company Email</label>\\r\\n\\t\\t\\t\\t\\t<input appValidateEmail required [(ngModel)]=\\\"user.companyEmail\\\" type=\\\"text\\\" id=\\\"companyemail\\\" name=\\\"companyemail\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t\\t\\t placeholder=\\\"vijay.nagarajan4283@gmail.com\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"mobile\\\">Mobile</label>\\r\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"user.mobile\\\" type=\\\"text\\\" id=\\\"mobile\\\" name=\\\"mobile\\\" class=\\\"form-control\\\" placeholder=\\\"647-891-4283\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\r\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"user.password\\\" type=\\\"text\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your password\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"confirmpassword\\\">Confirm Password</label>\\r\\n\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"user.confirmPassword\\\" type=\\\"text\\\" id=\\\"confirmpassword\\\" name=\\\"password\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t\\t\\t placeholder=\\\"Confirm your password\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<button class=\\\"button signup-button\\\" [disabled]=\\\"!signUpForm.form.valid\\\" routerLink=\\\"/register\\\" (click)=\\\"onSubmit()\\\">Sign Up</button>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\nimport {User} from '../user';\r\nimport { UserService } from '../user.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  user: User ;\r\n  activateModal: Boolean;\r\n  @Output() closeSignUpModal = new EventEmitter<boolean>();\r\n  // userService: UserService;\r\n  // route: Router;\r\n  constructor(private userService: UserService,\r\n              private loginSrvc: LoginService,\r\n              private route: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.userService.getNewUser();\r\n    this.activateModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.activateModal = false;\r\n    this.closeSignUpModal.emit(true);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log('Printing Signup User ', JSON.stringify(this.user));\r\n    this.userService.addUser(this.user);\r\n    this.loginSrvc.signIn(this.user.companyEmail, this.user.password, false);\r\n    this.closeModal();\r\n    this.route.navigateByUrl('/register/' + this.user.companyEmail);\r\n    // window.open('Registration.html')\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Test } from './test';\r\nimport { Developer } from './developer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestService {\r\n  tests: Test[] = [ \r\n    {name: 'Java8 Online Assessment' , category: 'Online Code Assessment' , duration: 45, developers: []},\r\n    {name: 'Javascript ES6 Fundamentals Assessment' , category: 'Online Code Assessment' , duration: 45, developers: []},\r\n    {name: 'HTML CSS3 and Javascript' , category: 'Online Code Assessment' , duration: 45, developers: []},\r\n    {name: 'AngularJS Assessment' , category: 'Online Code Assessment' , duration: 45, developers: []},\r\n    {name: 'Angular Material Assessment' , category: 'Online Code Assessment' , duration: 45, developers: []},\r\n    {name: 'React Assessment' , category: 'Online Code Assessment' , duration: 45, developers: []},\r\n];\r\n\r\n  constructor() { }\r\n\r\n  getTest(testName: string) {\r\n    return this.tests.length > 0 ? this.tests.filter(test => test.name.indexOf(testName) > -1)[0] : null;\r\n  }\r\n\r\n  getAllTests(): Test[] {\r\n    return this.tests;\r\n  }\r\n\r\n  getNewTest() {\r\n    return new Test();\r\n  }\r\n\r\n  addTest(test: Test): void {\r\n    console.log('Test Added',test);\r\n    this.tests.push(test);\r\n  }\r\n\r\n  //For Now it allows editing Developers only\r\n  addDeveloperToTest(developer: Developer): void {\r\n    let test: Test = this.getTest(developer.testName);\r\n    // let match = test && test.developers ? test.developers.findIndex(dev => dev.firstName == developer.firstName && \r\n    //                                   dev.lastName == developer.lastName) : null;\r\n    let match = test && test.developers ? test.developers.findIndex(dev => dev.email == developer.email) : null;                                      \r\n    if(match == -1) {\r\n      test.developers.push(developer);\r\n    }                                      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Developer } from \"./developer\";\r\n\r\nexport class Test {\r\n    name: string;\r\n    category: string;\r\n    duration: number;\r\n    developers: Developer[];\r\n\r\n    \r\n    // mobile: string;\r\n    // password: string;\r\n    // confirmPassword: string;\r\n    // companyname: string;\r\n    // websiteurl: string;\r\n    // industry: string;\r\n    // country: string;\r\n    // companyaddress: string;\r\n    // city: string;\r\n    // postalcode: string;\r\n    // nameoncard: string;\r\n    // cardnumber: string;\r\n    // cardmonthofexpiry: string;\r\n    // cardyearofexpiry: string;\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- form starts -->\\r\\n\\r\\n<div class=\\\"form-container-wrapper\\\" (mousedown)=\\\"hideVerNavbar()\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n    <form #userRegistrationForm=\\\"ngForm\\\">\\r\\n      <div id=\\\"section1\\\" class=\\\"section\\\">\\r\\n        <h2 class=\\\"section-heading\\\">Company Information</h2>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <div class=\\\"form-group offset-2\\\">\\r\\n            <label for=\\\"fname\\\">Company Name</label>\\r\\n            <input type=\\\"text\\\" id=\\\"companyname\\\" name=\\\"companyname\\\" class=\\\"form-control\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"user.companyname\\\"  required maxlength=\\\"40\\\" placeholder=\\\"Company name..\\\">\\r\\n            <div *ngIf=\\\"companyname.invalid && (companyname.dirty || companyname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"companyname.errors?.required\\\">\\r\\n                Company is required.\\r\\n              </div>\\r\\n              <div *ngIf=\\\"companyname.errors?.maxlength\\\">\\r\\n                Company exceeds 40 characters.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <!-- <div class=\\\"form-group form-group-offset-2\\\"> -->\\r\\n          <div class=\\\"form-group offset-2\\\">\\r\\n            <label for=\\\"websiteurl\\\">Website Url</label>\\r\\n            <input type=\\\"text\\\" id=\\\"websiteurl\\\" name=\\\"websiteurl\\\" class=\\\"form-control\\\" #websiteurl=\\\"ngModel\\\" [(ngModel)]=\\\"user.websiteurl\\\" placeholder=\\\"wsebsite address..\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"industry\\\">Industry</label>\\r\\n            <select id=\\\"industry\\\" name=\\\"industry\\\" class=\\\"form-control\\\" #industry=\\\"ngModel\\\" [(ngModel)]=\\\"user.industry\\\">\\r\\n              <option value=\\\"IT\\\">Information Technology</option>\\r\\n              <option value=\\\"Accountancy\\\">Accountancy</option>\\r\\n              <option value=\\\"Manufacturing\\\">Manufacturing</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"button-group-right\\\">\\r\\n          <button class=\\\"button save-button\\\" (click)=\\\"scrollBarService.scrollToNextSection(2)\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div id=\\\"section2\\\" class=\\\"section\\\">\\r\\n        <h2 class=\\\"section-heading\\\">Contact Information</h2>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"country\\\">Country</label>\\r\\n            <select id=\\\"country\\\" name=\\\"country\\\" class=\\\"form-control\\\" #industry=\\\"ngModel\\\" [(ngModel)]=\\\"user.country\\\"> \\r\\n              <option value=\\\"Canada\\\">Canada</option>\\r\\n              <option value=\\\"US\\\">United States</option>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"companyaddress\\\">Company Address*</label>\\r\\n          <input type=\\\"text\\\" id=\\\"companyaddress\\\" name=\\\"companyaddress\\\" class=\\\"form-control\\\" #companyaddress=\\\"ngModel\\\" [(ngModel)]=\\\"user.companyaddress\\\" placeholder=\\\"93 gatesgill street\\\">\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"city\\\">City*</label>\\r\\n            <input type=\\\"text\\\" id=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"user.city\\\" placeholder=\\\"Brampton\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"province\\\">State/Province*</label>\\r\\n            <select id=\\\"province\\\" name=\\\"province\\\" class=\\\"form-control\\\">\\r\\n              <option value=\\\"ON\\\">Ontario</option>\\r\\n              <option value=\\\"NS\\\">Nova Scotia</option>\\r\\n              <option value=\\\"QC\\\">Quebec</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"postalzipcode\\\">PostalCode/ZipCode*</label>\\r\\n          <input type=\\\"text\\\" id=\\\"postalzipcode\\\" name=\\\"postalzipcode\\\" class=\\\"form-control\\\" #postalcode=\\\"ngModel\\\" [(ngModel)]=\\\"user.postalcode\\\" placeholder=\\\"L6X 3T1\\\">\\r\\n        </div>\\r\\n        <div class=\\\"button-group-right\\\">\\r\\n          <button class=\\\"button save-button\\\" (click)=\\\"scrollBarService.scrollToNextSection(3)\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div id=\\\"section3\\\" class=\\\"section\\\">\\r\\n        <h2 class=\\\"section-heading\\\">Choose Your Package</h2>\\r\\n        <!-- Card starts -->\\r\\n        <div class=\\\"card-page\\\">\\r\\n\\r\\n          <div class=\\\"card package\\\">\\r\\n            <div class=\\\"center_text\\\">\\r\\n              <br>\\r\\n              <h1 class=\\\"package_info\\\">Gold Package</h1>\\r\\n              <p class=\\\"package_info package_desc\\\">$100/month</p>\\r\\n              <p class=\\\"package_info package_desc\\\">20 candidates per day</p>\\r\\n              <p class=\\\"package_info package_desc detailed_1\\\">Coding and Objectve type tests</p>\\r\\n            </div>\\r\\n            <div class=\\\"bottom-section\\\">\\r\\n              <button class=\\\"button\\\" name=\\\"gold\\\" (click)=\\\"selectPackage('gold')\\\" \\r\\n                      [ngClass]=\\\"{ 'selected': user?.package=='gold' }\\\">Buy Now</button>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"card package\\\">\\r\\n            <div class=\\\"center_text\\\">\\r\\n              <br>\\r\\n              <h1 class=\\\"package_info\\\">Silver Package</h1>\\r\\n              <p class=\\\"package_info package_desc\\\">$75/month</p>\\r\\n              <p class=\\\"package_info package_desc\\\">15 candidates per day</p>\\r\\n              <p class=\\\"package_info package_desc detailed_1\\\">Coding and Objectve type tests</p>\\r\\n            </div>\\r\\n            <div class=\\\"bottom-section\\\">\\r\\n              <button class=\\\"button\\\" name=\\\"silver\\\" (click)=\\\"selectPackage('silver')\\\" \\r\\n                      [ngClass]=\\\"{'selected': user?.package=='silver' }\\\">Buy Now</button>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"card package\\\">\\r\\n            <div class=\\\"center_text\\\">\\r\\n              <br>\\r\\n              <h1 class=\\\"package_info\\\">Bronze Package</h1>\\r\\n              <p class=\\\"package_info package_desc\\\">$50/month</p>\\r\\n              <p class=\\\"package_info package_desc\\\">10 candidates per day</p>\\r\\n              <p class=\\\"package_info package_desc detailed_1\\\">Coding and Objectve type tests</p>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"bottom-section\\\">\\r\\n              <button class=\\\"button\\\" name=\\\"bronze\\\" (click)=\\\"selectPackage('bronze')\\\"\\r\\n                      [ngClass]=\\\"{'selected': user?.package=='bronze' }\\\">Buy Now</button>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Card Ends -->\\r\\n      </div>\\r\\n      <div id=\\\"section4\\\" class=\\\"section\\\">\\r\\n        <h2 class=\\\"section-heading\\\">Payment Method</h2>\\r\\n        <!-- <div class=\\\"row\\\"> -->\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"nameoncard\\\">Name on Card</label>\\r\\n            <input type=\\\"text\\\" id=\\\"nameoncard\\\" name=\\\"nameoncard\\\" class=\\\"form-control\\\" #nameoncard=\\\"ngModel\\\" [(ngModel)]=\\\"user.nameoncard\\\" placeholder=\\\"G Raymond\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"cardnumber\\\">Card Number</label>\\r\\n            <input type=\\\"text\\\" id=\\\"cardnumber\\\" name=\\\"cardnumber\\\" class=\\\"form-control\\\" #cardnumber=\\\"ngModel\\\" [(ngModel)]=\\\"user.cardnumber\\\" placeholder=\\\"3444 4865 4467 4778\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group offset-by-3\\\">\\r\\n            <label for=\\\"validthrough\\\">Valid Through</label>\\r\\n            <input type=\\\"text\\\" id=\\\"cardmonthofexpiry\\\" name=\\\"cardmonthofexpiry\\\" class=\\\"form-control\\\" #cardmonthofexpiry=\\\"ngModel\\\" [(ngModel)]=\\\"user.cardmonthofexpiry\\\" placeholder=\\\"MM\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group offset-by-3\\\">\\r\\n            <select id=\\\"cardyearofexpiry\\\" name=\\\"cardyearofexpiry\\\" ng-control=\\\"options\\\" [(ngModel)]=\\\"user.cardyearofexpiry\\\" class=\\\"form-control\\\">\\r\\n              <option [value]=\\\"2018\\\">2018</option>\\r\\n              <option [value]=\\\"2019\\\">2019</option>\\r\\n              <option [value]=\\\"2020\\\">2020</option>\\r\\n              <option [value]=\\\"2021\\\">2021</option>\\r\\n              <option [value]=\\\"2022\\\">2022</option>\\r\\n              <option [value]=\\\"2023\\\">2023</option>\\r\\n              <option [value]=\\\"2024\\\">2024</option>\\r\\n              <option [value]=\\\"2025\\\">2025</option>\\r\\n            </select>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"button-group-right\\\">\\r\\n          <button class=\\\"button save-button\\\" [disabled]=\\\"!userRegistrationForm.form.valid\\\" routerLink=\\\"/viewtests\\\" (click)=\\\"onSubmit()\\\">Next</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n\\r\\n</div>\\r\\n<!-- </div> -->\\r\\n\\r\\n<!-- form Ends -->\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {User} from '../user';\r\nimport { UserService } from '../user.service';\r\nimport { ScrollbarService } from '../scrollbar.service'\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MenubarService} from '../menubar.service'\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.css']\r\n})\r\nexport class UserRegistrationComponent implements OnInit {\r\n  user: User;\r\n  constructor(private route: ActivatedRoute,private userService: UserService,\r\n    private menubarSvc:MenubarService,public scrollBarService: ScrollbarService) { }\r\n\r\n  ngOnInit() {\r\n    // const id = +this.route.snapshot.paramMap.get('id');\r\n    this.route.params.subscribe( params => {\r\n      console.log('userreg params', params['userId']);\r\n      this.user = this.userService.getUser(params['userId']);\r\n        }\r\n      );\r\n    console.log('UserRegistrationComponent', JSON.stringify(this.user));\r\n    \r\n  }\r\n\r\n  selectPackage(testPackage: string): void {\r\n    this.user.package = testPackage;\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    console.log('Printing Registered User ', JSON.stringify(this.user));\r\n  }  \r\n\r\n  hideVerNavbar(): void {\r\n    //Set display to false\r\n    this.menubarSvc.hideVerticalNavPanel(false);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {User} from './user';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  users: User[] = [];\r\n  constructor() { }\r\n\r\n  getUser(userId: string): User {\r\n    console.log('user service', JSON.stringify(this.users));\r\n    return this.users.length > 0 ? this.users.filter(user => user.companyEmail.indexOf(userId) > -1)[0] : null;\r\n    // return this.users.length > 0 ? this.users.filter(user => userId == user.companyEmail)[0] : null;\r\n  }\r\n\r\n  getNewUser(): User {\r\n    return new User();\r\n  }\r\n\r\n  addUser(user: User): void {\r\n    console.log('User Added',user);\r\n    this.users.push(user);\r\n  }\r\n\r\n  authenticateUser(username: string, passwd: string): Boolean {\r\n    //Username of the Candidate is nothing but email \r\n    let user:User = this.getUser(username);\r\n    return user && user.password == passwd;\r\n  }\r\n\r\n}\r\n","export class User {\r\n    firstName: string;\r\n    lastName: string;\r\n    companyEmail: string;\r\n    mobile: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    companyname: string;\r\n    websiteurl: string;\r\n    industry: string;\r\n    country: string;\r\n    companyaddress: string;\r\n    city: string;\r\n    postalcode: string;\r\n    nameoncard: string;\r\n    cardnumber: string;\r\n    cardmonthofexpiry: string;\r\n    cardyearofexpiry: string;\r\n    package: string;\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { EmailValidatorService } from './email-validator.service';\r\n@Directive({\r\n  selector: '[appValidateEmail]',\r\n  providers: [{provide:NG_VALIDATORS, useExisting: ValidateEmailDirective, multi: true}]\r\n})\r\nexport class ValidateEmailDirective implements Validator {\r\n  constructor(private emailValidatorSrvc: EmailValidatorService ){}  \r\n  @Input('appValidateEmail') forbiddenEmail: string;\r\n  emailRegex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  \r\n    validate(control: AbstractControl): ValidationErrors | null {\r\n      console.log('wwe');\r\n      return this.emailRegex ? this.emailValidatorSrvc.emailValidator(new RegExp(this.emailRegex.source, 'i'))(control) : null;\r\n    } \r\n\r\n  \r\n}\r\n","module.exports = \"\\r\\n\\r\\nul.vertical {\\r\\n    /* top: 6%; */\\r\\n    /* max-width: 80vw; */\\r\\n    list-style-type: none;\\r\\n    margin: 20px 0px;\\r\\n    padding-top: 1.5vw;\\r\\n    width: 20%;\\r\\n    float: left;    \\r\\n    position: fixed;\\r\\n    max-height: 80%;\\r\\n    overflow: auto;    \\r\\n    height: 100%;\\r\\n    background-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n\\r\\n/* On screens that are 992px or less, set the background color to blue */\\r\\n\\r\\n\\r\\n@media screen and (max-width: 768px) {\\r\\n    ul.vertical {\\r\\n        z-index: 9;\\r\\n        width: 50%;\\r\\n        padding-top: 10vw;\\r\\n    }\\r\\n    ul.vertical li.vertical {\\r\\n        /* border: 1px solid green; */\\r\\n        margin-top: 6vw;\\r\\n        margin-bottom: 6vw;\\r\\n    }    \\r\\n\\r\\n}\\r\\n\\r\\n\\r\\nul.vertical li {\\r\\n    /* border: 1px solid green; */\\r\\n    margin: 20px;\\r\\n    padding: 0;\\r\\n    border-radius: 5px; \\r\\n}\\r\\n\\r\\n\\r\\nli.vertical a {\\r\\n    display: block;\\r\\n    /* border: 1.25px solid green;  */\\r\\n    color: green;\\r\\n    background-color: white;\\r\\n    text-align: left;\\r\\n    padding: 14px 16px;\\r\\n    text-decoration: none;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-style: normal;\\r\\n\\tfont-variant: normal;\\r\\n    font-weight: 700;\\r\\n    /* border-radius: 5px; */\\r\\n}\\r\\n\\r\\n\\r\\nli.vertical a:hover {\\r\\n    background-color: white;\\r\\n    color: green;\\r\\n    -webkit-text-decoration-line: underline;\\r\\n            text-decoration-line: underline;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<ul class=\\\"vertical\\\" id=\\\"navigationPanel\\\" *ngIf=\\\"varDisplayPanel\\\">\\r\\n    <li class=\\\"vertical\\\">\\r\\n        <!-- <a href=\\\"#manageTests\\\" id=\\\"manageTests\\\">Manage Tests</a> -->\\r\\n        <a id=\\\"manageTests\\\" style=\\\"cursor: pointer\\\" (click)=\\\"navigateTo('viewtests')\\\">Manage Tests</a>\\r\\n    </li>\\r\\n    <li class=\\\"vertical\\\">\\r\\n        <!-- <a href=\\\"#advancedSearch\\\" id=\\\"advancedSearch\\\">Advanced Search</a> -->\\r\\n        <a id=\\\"advancedSearch\\\">Advanced Search</a>\\r\\n    </li>\\r\\n    <li class=\\\"vertical\\\">\\r\\n        <a style=\\\"cursor: pointer\\\" id=\\\"candidateDirectory\\\" (click)=\\\"navigateTo('candidatedirectory')\\\">Candidate\\r\\n            Directory</a>\\r\\n    </li>\\r\\n    <li class=\\\"vertical\\\">\\r\\n        <a style=\\\"cursor: pointer\\\" id=\\\"resultsEvaluation\\\">Results Evaluation</a>\\r\\n    </li>\\r\\n    <li class=\\\"vertical\\\">\\r\\n        <a href=\\\"#assignTests\\\" id=\\\"assignTests\\\">Assign Tests</a>\\r\\n    </li>\\r\\n</ul>\\r\\n\"","import { Component, OnInit, Input, NgZone } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { ValueTransformer } from '@angular/compiler/src/util';\r\nimport {  ChangeDetectorRef } from '@angular/core';\r\n\r\ndeclare var $: any;\r\n@Component({\r\n  \r\n  selector: 'app-vertical-navbar',\r\n  templateUrl: './vertical-navbar.component.html',\r\n  styleUrls: ['./vertical-navbar.component.css']\r\n})\r\nexport class VerticalNavbarComponent implements OnInit {\r\n  varDisplayPanel: boolean = true;\r\n  menubarFlag: boolean = true;\r\n  extras: NavigationExtras = {skipLocationChange: true};\r\n  \r\n  constructor(private route: Router,\r\n              private cdr: ChangeDetectorRef,\r\n              private zone: NgZone\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  navigateTo(path: string): void {\r\n    this.zone.run(() => {\r\n      this.route.navigate([path], {skipLocationChange: true}).then;\r\n    });    \r\n    \r\n  }\r\n\r\n  toggleDisplayOfNavPanel(flag: boolean):void {\r\n    this.varDisplayPanel = flag;\r\n    this.cdr.detectChanges();\r\n    console.log('VerticalNavbarComponent toggleDisplayOfNavPanel ',this.varDisplayPanel);\r\n  }\r\n\r\n   ngOnDestroy() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"  <div class=\\\"form-container-wrapper\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n    <div id=\\\"section_manageTests\\\" class=\\\"section\\\">\\r\\n      <h2 class=\\\"section-heading\\\"> Online Assessment Tests</h2>\\r\\n      <div id=\\\"section_searchTests\\\" class=\\\"section\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group offset-1\\\">\\r\\n            <label for=\\\"test\\\">Test Name</label>\\r\\n            <input type=\\\"text\\\" id=\\\"cdFirstName\\\" name=\\\"testName\\\" class=\\\"form-control\\\" placeholder=\\\"Test Name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group offset-by-3\\\">\\r\\n            <label for=\\\"test\\\"> &nbsp; </label>\\r\\n            <button class=\\\"button save-button search-button\\\" routerLink=\\\"/managequestions\\\" >Search</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div id=\\\"section_createTest\\\" class=\\\"section\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group offset-1\\\">\\r\\n            <button class=\\\"button save-button search-button\\\" (click)=\\\"createTest=true\\\" >Create Test</button>\\r\\n          </div>\\r\\n        </div>  \\r\\n        <app-create-test *ngIf=\\\"createTest\\\" (closeCreateTestModal)=\\\"oncloseModal($event)\\\"></app-create-test>\\r\\n\\r\\n      </div>      \\r\\n      <div id=\\\"section_viewTests\\\" class=\\\"section\\\"> \\r\\n        <!-- Card starts -->\\r\\n        <!-- <form [formGroup]=\\\"testForm\\\" (ngSubmit)=\\\"onSubmit()\\\"> -->\\r\\n            <!-- formArrayName=\\\"aliases\\\" -->\\r\\n          <div  class=\\\"card-page\\\">\\r\\n            <div *ngFor=\\\"let test of populateTests(); let i=index\\\">\\r\\n\\r\\n              <!-- <div class=\\\"card-page\\\"> -->\\r\\n              <div class=\\\"card package top-green\\\">\\r\\n                <div class=\\\"center_text\\\">\\r\\n                  <br>\\r\\n                  <h3 class=\\\"test_info\\\" (click)=\\\"openSelectedTest(test)\\\">{{test.name}}</h3>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Card Ends -->\\r\\n            </div>\\r\\n          </div>\\r\\n        <!-- </form> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>  \\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormArray } from '@angular/forms';\r\nimport { Test } from '../test';\r\nimport { TestService } from '../test.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-test',\r\n  templateUrl: './view-test.component.html',\r\n  styleUrls: ['./view-test.component.css']\r\n})\r\nexport class ViewTestComponent implements OnInit {\r\n\r\n\r\n  createTest: Boolean;\r\n  selectedTest: any;\r\n  tests: Test[] = [];\r\n  testForm = this.fb.group({\r\n\r\n    aliases: this.fb.array([\r\n      this.fb.control('initial')\r\n    ])\r\n  });\r\n\r\n  get aliases() {\r\n    return this.testForm.get('aliases') as FormArray;\r\n  }\r\n\r\n  addAlias( name: string) {\r\n    this.aliases.push(this.fb.control(name));\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, \r\n              private testService: TestService,\r\n              private route: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.populateTests();\r\n  }\r\n\r\n  populateTests(): Test[] {\r\n    return this.testService.getAllTests();\r\n  }\r\n\r\n  // populateTest1() {\r\n  //   this.tests =[];\r\n  //   this.tests = this.testService.getAllTests();\r\n  //   this.aliases.removeAt(0);\r\n  //   //Remove initial element\r\n  //   let index = this.aliases.controls.findIndex(e=> e.value == 'initial');\r\n  //   console.log('ViewTestComponent', index,this.tests);\r\n  //   if(index > -1) {\r\n  //     this.aliases.controls.splice(index,1);\r\n  //   }\r\n  //   this.tests.forEach(element => {\r\n  //     this.addAlias(element.name);\r\n  //   });\r\n  // }\r\n\r\n  openSelectedTest(selectedTestName: Test): void {\r\n    console.log('selectedTestName',selectedTestName);\r\n    this.route.navigate(['/managequestions'] , {queryParams: {testName: selectedTestName.name, testCategory: selectedTestName.category}});\r\n  }\r\n\r\n\r\n  oncloseModal(close: boolean) {\r\n    this.createTest = !close;\r\n    this.populateTests();\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}